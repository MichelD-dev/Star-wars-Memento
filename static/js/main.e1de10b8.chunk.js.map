{"version":3,"sources":["Components/HOC/withFetch.js","Components/List.js","Components/Content.js","Components/Header/Header.js","App.js","index.js"],"names":["withFetch","WrappedComponent","props","useState","data","setData","isLoading","setIsLoading","setIsError","useEffect","clickedCategory","a","fetch","response","ok","json","Error","message","console","log","fetchData","Dimmer","active","Loader","inverted","size","style","opacity","DataList","Segment","List","selection","divided","map","item","i","Item","name","title","FetchedContent","categoriesList","Container","fluid","width","Grid","stackable","centered","columns","height","paddingTop","justifyContent","some","category","Column","results","Header","Menu","secondary","fixed","padding","Image","wrapped","src","verticalAlign","position","onClick","App","setCategoriesList","setClickedCategory","cat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1de10b8.chunk.js","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport { Dimmer, Loader } from 'semantic-ui-react'\r\n\r\nfunction withFetch(WrappedComponent) {\r\n  const WithFetch = props => {\r\n    const [data, setData] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [isError, setIsError] = useState()\r\n\r\n    useEffect(() => {\r\n      if (!props.clickedCategory) return\r\n      const fetchData = async () => {\r\n        try {\r\n          setIsLoading(true)\r\n          const response = await fetch(\r\n            `https://swapi.dev/api/${props.clickedCategory}`\r\n          )\r\n          if (response.ok) {\r\n            const json = await response.json()\r\n            setData(data => [...data, json])\r\n            setIsLoading(false)\r\n          } else {\r\n            throw new Error('Fetch request error')\r\n          }\r\n        } catch (err) {\r\n          setIsError(err.message)\r\n          console.log(err.message)\r\n        }\r\n      }\r\n      fetchData()\r\n    }, [props.clickedCategory])\r\n\r\n    return isLoading ? (\r\n      <Dimmer active>\r\n        <Loader inverted size='big' style={{ opacity: '.8' }}>\r\n          Veuillez patienter...\r\n        </Loader>\r\n      </Dimmer>\r\n    ) : (\r\n      <WrappedComponent data={data} {...props} />\r\n    )\r\n  }\r\n\r\n  return WithFetch\r\n}\r\n\r\nexport default withFetch\r\n","import { Segment, List } from 'semantic-ui-react'\r\n\r\nconst DataList = ({ data }) => {\r\n  return (\r\n    <Segment inverted style={{ opacity: '.8' }}>\r\n      <List selection inverted divided size='big'>\r\n        {data.map((item, i) => (\r\n          <List.Item key={`name_${i}`}>{item.name || item.title}</List.Item>\r\n        ))}\r\n      </List>\r\n    </Segment>\r\n  )\r\n}\r\n\r\nexport default DataList\r\n","import { Grid, Container } from 'semantic-ui-react'\r\nimport withFetch from './HOC/withFetch'\r\nimport DataList from './List'\r\n\r\nconst Content = ({ data, clickedCategory, categoriesList }) => {\r\n  return (\r\n    <Container fluid style={{ width: '90vw' }}>\r\n      <Grid\r\n        stackable\r\n        centered\r\n        columns={4}\r\n        style={{\r\n          height: '100vh',\r\n          paddingTop: '20rem',\r\n          justifyContent: 'flex-start',\r\n        }}\r\n      >\r\n        {categoriesList.some(item => item === clickedCategory) &&\r\n          data.map((category, i) => (\r\n            <Grid.Column key={`category_${i}`}>\r\n              <DataList data={category.results} />\r\n            </Grid.Column>\r\n          ))}\r\n      </Grid>\r\n    </Container>\r\n  )\r\n}\r\nconst FetchedContent = withFetch(Content)\r\n\r\nexport default FetchedContent\r\n","import { Image, Menu } from 'semantic-ui-react'\r\n\r\nconst Header = ({ fetch }) => {\r\n  return (\r\n    <Menu\r\n      secondary\r\n      size='massive'\r\n      fixed='top'\r\n      stackable\r\n      inverted\r\n      style={{ padding: '2rem 4rem 0' }}\r\n    >\r\n      <Menu.Item>\r\n        <Image\r\n          wrapped\r\n          size='small'\r\n          src='https://upload.wikimedia.org/wikipedia/commons/thumb/9/9b/Star_Wars_Yellow_Logo.svg/1280px-Star_Wars_Yellow_Logo.svg.png'\r\n          verticalAlign='middle'\r\n        />\r\n      </Menu.Item>\r\n      <Menu.Menu position='right'>\r\n        <Menu.Item onClick={() => fetch('films')}>Films</Menu.Item>\r\n        <Menu.Item onClick={() => fetch('planets')}>Planètes</Menu.Item>\r\n        <Menu.Item onClick={() => fetch('people')}>Personnes</Menu.Item>\r\n        <Menu.Item onClick={() => fetch('starships')}>Vaisseaux</Menu.Item>\r\n        <Menu.Item onClick={() => fetch('vehicles')}>Vehicules</Menu.Item>\r\n        <Menu.Item onClick={() => fetch('species')}>Espèces</Menu.Item>\r\n      </Menu.Menu>\r\n    </Menu>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import { useState } from 'react'\nimport { Container } from 'semantic-ui-react'\nimport FetchedContent from './Components/Content.js'\nimport Header from './Components/Header/Header.js'\n\nfunction App() {\n  const [categoriesList, setCategoriesList] = useState([])\n  const [clickedCategory, setClickedCategory] = useState('')\n\n  const fetch = category => {\n    if (categoriesList.some(cat => cat === category)) return\n    setCategoriesList([...categoriesList, category])\n    setClickedCategory(category)\n  }\n\n  return (\n    <Container fluid>\n      <Header fetch={fetch} />\n      <FetchedContent\n        categoriesList={categoriesList}\n        clickedCategory={clickedCategory}\n      />\n    </Container>\n  )\n}\n\nexport default App\n","import ReactDOM from 'react-dom'\nimport App from './App'\nimport 'semantic-ui-css/semantic.min.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}